version: '3'
services:
  openssl:
    image: cyberark/conjur
    container_name: openssl
    entrypoint:
     - openssl
     - req
     - -newkey
     - rsa:2048
     - -days
     - "365"
     - -nodes
     - -x509
     - -config
     - /tmp/conf/tls.conf
     - -extensions
     - v3_ca
     - -keyout
     - /tmp/conf/nginx.key
     - -out
     - /tmp/conf/nginx.crt
    volumes:
     - ./conf/tls/:/tmp/conf

  bot_app:
    image: cfmanteiga/alpine-bash-curl-jq
    privileged: true
    container_name: bot_app
    command: tail -F anything
    volumes:
    - ./program.sh:/tmp/program.sh
    restart: on-failure
  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
    - REDIS_HOSTS=local:cache:6379
    ports:
    - "8082:8081"
  database:
    image: postgres:10.16
    container_name: postgres_database
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - 8432:5432
    # volumes:
      # - ./postgres.conf:/var/lib/postgresql/data/postgresql.conf

  pgadmin:
#    https://www.pgadmin.org/docs/pgadmin4/latest/container_deployment.html
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin@pgadmin.com #the username to login to pgadmin
      PGADMIN_DEFAULT_PASSWORD: pgadmin
    ports:
      - 8081:80
    # volumes:
      # - ./pgadmin-servers.json:/var/lib/pgadmin/storage/pgadmin_pgadmin.com/servers.json

  conjur:
    image: cyberark/conjur
    container_name: conjur_server
    command: server
    environment:
      DATABASE_URL: postgres://postgres@database/postgres
      CONJUR_DATA_KEY: FWxDdCYVP9XM+vHfn+YUGvIMJ/6XBsA3qaHZ+x3tC/0=
      CONJUR_AUTHENTICATORS:
    depends_on:
    - database
    restart: on-failure
    ports:
      - 8080:80

  proxy:
    image: nginx:1.13.6-alpine
    container_name: nginx_proxy
    ports:
      - "8443:443"
    volumes:
      - ./conf/:/etc/nginx/conf.d/:ro
      - ./conf/tls/:/etc/nginx/tls/:ro
    depends_on:
    - conjur
    - openssl
    restart: on-failure

  client:
    image: cyberark/conjur-cli:5
    container_name: conjur_client
    depends_on: [ proxy ]
    entrypoint: sleep
    command: infinity
    volumes:
    - ./conf/policy:/policy
  
  conjur_go:
    image: golang:1.19
    container_name: conjur_go
    working_dir: /src
    environment:
      CONJUR_DATA_KEY: FWxDdCYVP9XM+vHfn+YUGvIMJ/6XBsA3qaHZ+x3tC/0=
      DATABASE_URL: postgres://postgres@database/postgres
    command: bash -c 'cd /src && make build && ./conjurctl server --bind-address=0.0.0.0'
    volumes:
    - ../conjur-in-go:/src
    ports:
      - 8000:8000
